spring.application.name=notification-service

# not localhost in Docker, but the container name
spring.rabbitmq.host=rabbitmq
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

#configure the Infobip API credentials
infobip.api.base-url=https://z3j4l3.api.infobip.com
#${INFOBIP_BASEURL}
infobip.api.key=53d26427eaf4046b91c12b3be1e99179-46f55308-448b-40c1-a114-503875043b3c
#${INFOBIP_API_KEY}
infobip.api.from=SenderName
infobip.api.to=RecipientPhoneNumber

# or https://z3j4l3.infobip.com ?
infobip.email.baseUrl=${INFOBIP_BASE_URL}
#your-api-key
infobip.email.apiKey=${INFOBIP_API_KEY}
infobip.email.fromEmail=${INFOBIP_FROM_EMAIL}

#check the logs after the application has started
#configure Spring Boot to write logs to a file
logging.file.name=application.log

# if the notification service is purely event-driven 
# without HTTP endpoints,
# it doesn't need Swagger documentation
# springdoc.api-docs.path=/v3/api-docs
# springdoc.swagger-ui.path=/swagger-ui/
 
# ensure the health and prometheus endpoints are enabled
management.endpoints.web.exposure.include=health,prometheus
management.endpoint.health.show-details=always
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true
